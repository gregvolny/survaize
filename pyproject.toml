# ---- Project Info and Dependencies ----

[project.urls]
Repository = "https://github.com/jhandley/survaize"
# Homepage = "https://..."
# Documentation = "https://..."

[project]
name = "survaize"
description = "Convert survey questionnaires to electronic/mobile surveys using AI"
authors = [
    { name="Josh Handley", email="josh@teleyah.com" },
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.11,<4.0"
dynamic = ["version"]

# https://pypi.org/classifiers/
# Adjust as needed:
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
    # Include this to avoid accidentally publishing to PyPI:
    "Private :: Do Not Upload",
]


# ---- Main dependencies ----

dependencies = [
    "click>=8.1.8",
    "fastapi>=0.115.12",
    "hatchling>=1.27.0",
    "logfire[fastapi]>=3.21.1",
    "openai>=1.77.0",
    "opencv-python>=4.11.0.86",
    "pdf2image>=1.17.0",
    "pillow>=11.2.1",
    "pydantic>=2.11.4",
    "pydantic-evals>=0.2.6",
    "pytesseract>=0.3.13",
    "python-dotenv>=1.1.0",
    "python-multipart>=0.0.20",
    "pyyaml>=6.0.2",
    "uvicorn>=0.34.3",
    "websockets>=15.0.1",
]


# ---- Dev dependencies ----

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "ruff>=0.11.0",
    "codespell>=2.4.1",
    "rich>=13.9.4",
    "basedpyright>=1.28.2",
    "funlog>=0.2.0",
]

[project.scripts]
# Add script entry points here:
survaize = "survaize.main:cli"


# ---- Build system ----

# Dynamic versioning from:
# https://github.com/ninoseki/uv-dynamic-versioning/

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"
# Note JSON schemas don't seem to be right for tool.hatch.version.source so
# this may cause false warnings in IDEs.
# https://github.com/ninoseki/uv-dynamic-versioning/issues/21

[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"
bump = "true"

# run our hook for every target
[tool.hatch.build.hooks.custom]
path = "devtools/build_frontend.py"

[tool.hatch.build.targets.wheel]
# The source location for the package.
packages = ["src/survaize"]

[tool.hatch.build.targets.wheel.force-include]
"src/survaize/web/frontend/dist" = "survaize/web/frontend/dist"

# ---- Settings ----

[tool.ruff]
# Set as desired, typically 88 (black standard) or 100 (wide).
line-length = 120

[tool.ruff.lint]
select = [
    # See: https://docs.astral.sh/ruff/rules/
    # Basic list from: https://docs.astral.sh/ruff/linter/#rule-selection
    "E", # https://docs.astral.sh/ruff/rules/#error-e
    "F", # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "UP", # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "B", # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "I", # https://docs.astral.sh/ruff/rules/#isort-i
    "Q", # https://docs.astral.sh/ruff/rules/#flake8-quotes-q
    "COM", # https://docs.astral.sh/ruff/rules/#flake8-commas-com
    "SIM" # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim

]
ignore = [
    # Disable some rules that are overly pedantic. Add/remove as desired:
    # We use both ruff formatter and linter so some rules should always be disabled.
    # See: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191", # https://docs.astral.sh/ruff/rules/tab-indentation/
    "E111", # https://docs.astral.sh/ruff/rules/indentation-with-invalid-multiple/
    "E114", # https://docs.astral.sh/ruff/rules/indentation-with-invalid-multiple-comment/
    "E117", # https://docs.astral.sh/ruff/rules/over-indented/
    "D206", # https://docs.astral.sh/ruff/rules/docstring-tab-indentation/
    "D300", # https://docs.astral.sh/ruff/rules/triple-single-quotes/
    "Q000", # https://docs.astral.sh/ruff/rules/bad-quotes-inline-string/
    "Q001", # https://docs.astral.sh/ruff/rules/bad-quotes-multiline-string/
    "Q002", # https://docs.astral.sh/ruff/rules/bad-quotes-docstring/
    "Q003", # https://docs.astral.sh/ruff/rules/avoidable-escaped-quote/
    "COM812", # https://docs.astral.sh/ruff/rules/missing-trailing-comma/
    "COM819", # https://docs.astral.sh/ruff/rules/prohibited-trailing-comma/
    "ISC002", # https://docs.astral.sh/ruff/rules/multi-line-implicit-string-concatenation/
]
exclude = [
    "src/survaize/web/frontend",
]

[tool.basedpyright]
include = ["src", "tests", "evals", "devtools"]
exclude = [
    "src/survaize/web/frontend"
]

# BasedPyright rules
reportIgnoreCommentWithoutRule = false
reportUnnecessaryTypeIgnoreComment = false
reportMissingTypeStubs = false
enableTypeIgnoreComments = true
reportUnusedCallResult = false
reportAny = false

[tool.codespell]
# Add here as needed:
ignore-words-list = "popstan"
skip = ["src/survaize/web/frontend"]

[tool.pytest.ini_options]
python_files = ["*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
testpaths = [
    "src",
    "tests",
]
norecursedirs = []
filterwarnings = []

[tool.logfire]
ignore_no_config=true 
